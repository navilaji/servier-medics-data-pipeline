from collections import Counter

class AdHocAnalyser:
    '''
    This class offers some ad-hoc analysis functionalities
    '''
    def find_best_publisher(self, publication_graph):
        '''
        Gets the publication graph json object generated by the PublicationInfoService.generate_drug_pub_graph ,
        and returns the name of the journal that mentions the most number of drugs.
        :param publication_graph: generated graph by the PublicationInfoService.generate_drug_pub_graph ,
        :return: a tuple, first item contains the name journal, and the second items contains the number of drugs that it mentions
        '''
        journals = []
        for k,v in publication_graph.items():
            journals.extend(set(map(self.get_journal,v["journals"])))
        c = Counter(journals)
        return c.most_common(1)[0]

    def get_journal(self, journal_dict):
        return journal_dict["journal"].strip().lower()

adhoc_analyser = AdHocAnalyser()
